diff --git build/config/compiler/BUILD.gn build/config/compiler/BUILD.gn
index 461e62da2d50..7cd9237c03ca 100644
--- build/config/compiler/BUILD.gn
+++ build/config/compiler/BUILD.gn
@@ -149,7 +149,7 @@ declare_args() {
             !(is_android && use_order_profiling) &&
             ((use_lld && !is_nacl) ||
              (use_gold &&
-              ((!is_android && linux_use_bundled_binutils) || is_chromeos ||
+              ((!is_android && linux_use_bundled_binutils && current_cpu != "x86") || is_chromeos ||
                !(current_cpu == "x86" || current_cpu == "x64"))))
 }
 
diff --git chrome/browser/ui/libgtkui/gtk_util.cc chrome/browser/ui/libgtkui/gtk_util.cc
index 96f8c0e71472..49c462b37e12 100644
--- chrome/browser/ui/libgtkui/gtk_util.cc
+++ chrome/browser/ui/libgtkui/gtk_util.cc
@@ -237,6 +237,7 @@ float GetDeviceScaleFactor() {
   return linux_ui ? linux_ui->GetDeviceScaleFactor() : 1;
 }
 
+#if GTK_MAJOR_VERSION > 2
 using GtkSetState = void (*)(GtkWidgetPath*, gint, GtkStateFlags);
 PROTECTED_MEMORY_SECTION base::ProtectedMemory<GtkSetState>
     _gtk_widget_path_iter_set_state;
@@ -244,6 +245,7 @@ PROTECTED_MEMORY_SECTION base::ProtectedMemory<GtkSetState>
 using GtkSetObjectName = void (*)(GtkWidgetPath*, gint, const char*);
 PROTECTED_MEMORY_SECTION base::ProtectedMemory<GtkSetObjectName>
     _gtk_widget_path_iter_set_object_name;
+#endif
 
 }  // namespace
 
@@ -401,10 +403,12 @@ ScopedStyleContext AppendCssNodeToStyleContext(GtkStyleContext* context,
           NOTREACHED();
       }
     } else {
+#if GTK_MAJOR_VERSION > 2
       static base::ProtectedMemory<GtkSetObjectName>::Initializer init(
           &_gtk_widget_path_iter_set_object_name,
           reinterpret_cast<GtkSetObjectName>(dlsym(
               GetGtkSharedLibrary(), "gtk_widget_path_iter_set_object_name")));
+#endif
       switch (part_type) {
         case CSS_NAME: {
           if (GtkVersionCheck(3, 20)) {
@@ -449,6 +453,7 @@ ScopedStyleContext AppendCssNodeToStyleContext(GtkStyleContext* context,
   // widgets specially if they want to.
   gtk_widget_path_iter_add_class(path, -1, "chromium");
 
+#if GTK_MAJOR_VERSION > 2
   if (GtkVersionCheck(3, 14)) {
     static base::ProtectedMemory<GtkSetState>::Initializer init(
         &_gtk_widget_path_iter_set_state,
@@ -457,6 +462,7 @@ ScopedStyleContext AppendCssNodeToStyleContext(GtkStyleContext* context,
     DCHECK(*_gtk_widget_path_iter_set_state);
     base::UnsanitizedCfiCall(_gtk_widget_path_iter_set_state)(path, -1, state);
   }
+#endif
 
   ScopedStyleContext child_context(gtk_style_context_new());
   gtk_style_context_set_path(child_context, path);
diff --git third_party/unrar/BUILD.gn third_party/unrar/BUILD.gn
index 6e2bc75171ee..9275f68d12e3 100644
--- third_party/unrar/BUILD.gn
+++ third_party/unrar/BUILD.gn
@@ -56,6 +56,10 @@ if (safe_browsing_mode == 1) {
       "src/volume.cpp",
     ]
 
+    if (is_posix && !is_mac) {
+      sources += [ "src/global.cpp" ]
+    }
+
     configs -= [
       "//build/config/compiler:chromium_code",
       "//build/config/compiler:no_exceptions",
